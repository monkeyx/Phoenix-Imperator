{"Name":"UbertestersSDK","Id":1556,"Alias":"UbertestersSDK","Description":"##Ubertesters SDK\n\n##### \nEnsure your app quality with the Ubertesters SDK.\n\n###Features\n\n###### \n+ **Bug submission** - submit a bug with your comments, description and real-time screenshots directly from within your app. With the Ubertesters SDK bug reporting is easy.\n\n\n+ **Build distribution** - distribute builds to your team members over-the-air, manage build permissions, enable and disable a specific build for testing. The Ubertesters SDK automatically keeps your testers up-to-date with the latest build of your app.\n\n+ **Crash reporting**- get automatic and instant crash logs and reports that include all essential data such as stack traces, type of crash, device and OS version. \n\n\n+ **Test cases support** - run test cases from your mobile application with Ubertesters SDK.\n\n+ **Session Tracking** - track all testing sessions in real-time sorted by devices or testers. Use your Ubertesters dashboard to review your device status in real-time.\n\n+ **Integration with external Bug Tracking Systems** - integrate and publish your bugs, features or feedback into Jira, YouTrack, Mantis or RedMine.\n\n\n###For iOS:\n\n##### \n\n```\nusing MonoTouch.Foundation;\nusing MonoTouch.UIKit;\nusing MonoTouch.ObjCRuntime;\n\nusing UbertestersCrashHandler;\nusing UbertestersSDK;\n\n\nnamespace UbertestersXamarinAppTest\n{\n//...\n public override bool FinishedLaunching (UIApplication app, NSDictionary options)\n  {\n\t//...\n\tUbertesters.Shared.Initialize ();\n\tAppDomain.CurrentDomain.UnhandledException += \n\t(object sender, UnhandledExceptionEventArgs e) =\u003e {\n\t\t\t\n\t\t\tCrashHandler.PostCrash (e);\n\t   };\n\t\t\treturn true;\n\t}\n //...\n\t}\n //....\n}\n```\n\n###For Android:\n\n##### \n```    \n//...\n\nusing Com.Ubertesters.Sdk;\n\nnamespace TestAndroid\n{\n\t[Application(Icon = \"@drawable/icon\")]\n\tpublic class TestAndroidApp : Application\n\t{\n\t\tpublic TestAndroidApp(IntPtr handle, JniHandleOwnership transfer)\n\t\t\t: base(handle,transfer)\n\t\t{\n\t\t}\n\n\t\tpublic override void OnCreate ()\n\t\t{\n\t\t\tbase.OnCreate ();\n\t\t\tUbertesters.Initialize (this);\n\t\t\tAndroidEnvironment.UnhandledExceptionRaiser += OnException;\n\t\t}\n\n\t\tprivate static void OnException(object sender, RaiseThrowableEventArgs e)\n\t\t{\n\t\t\tUbertesters.SendException(e);\n\t\t\tthrow e.Exception;\n\t\t}\n\t}\n}\n```\n     \n     \n","Version":"1.0.3","Summary":"Ubertesters is a mobile application beta testing management tool that helps you manage all beta testing resources in a single environment.","QuickStart":"You have installed Ubertesters component for Xamarin. It will allow you to use Ubertesters platform with both Android and iOS Xamarin projects. For illustrated manual visit http://ubertesters.com/download-sdk/ and select Xamarin in the left menu.\n\nAdd Ubertesters project ID to your project:\n\n1. Open [http://beta.ubertesters.com/projects](http://beta.ubertesters.com/projects) and select your project, go to SDK Integration. \n2. Copy your unique \"Ubertesters Project ID\"\n##### \n\n### Android integration\n\n##### \n1.Edit \"AndroidManifest.xml\" file of your project:\n``` \n\u003capplication\u003e\n//...\n\u003cmeta-data android:name=\"ubertesters_project_id\" android:value=\"your project id\"/\u003e\n//...\n\u003c/application\u003e       \n```\n\n2.Add Permissions into `\u003cmanifest\u003e` tag:\n\n```\n\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\n\u003cmanifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n  package=\"your package\"\n  android:versionCode=\"1\"\n  android:versionName=\"1.0\"\u003e\n\n   // ...\n  \u003c!-- Ubertesters library user-permisions --\u003e\n  \u003cuses-permission android:name=\"android.permission.GET_TASKS\" /\u003e\n  \u003cuses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" /\u003e\n  \u003cuses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\" /\u003e\n  \u003c!-- Ubertesters library user-permisions --\u003e\n   //...\n\n\u003c/manifest\u003e  \n```\n\n3.Open \"AppDelegate.cs\" file. Add using \"Com.Ubertesters.Sdk\" namespace:\n\n`using Com.Ubertesters.Sdk;`\n\n4.Open your application class and override `OnCreate`  function. Initialize UbertestersSDK and add crash handler in \"AppDelegate.cs\":\n\n```\npublic class DemoApp : Application\n{\npublic DemoApp(IntPtr handle, JniHandleOwnership transfer)\n: base(handle,transfer)\n    {\n    }\n\n\tpublic override void OnCreate ()\n\t\t{\n\t\t\tbase.OnCreate ();\n\t\t\tUbertesters.Initialize (this);\n\t\t\tAndroidEnvironment.UnhandledExceptionRaiser += OnException;\n\t\t}\n\n\t\tprivate static void OnException(object sender, RaiseThrowableEventArgs e)\n\t\t{\n\t\t\tUbertesters.SendException(e);\n\t\t\tthrow e.Exception;\n\t\t}\n}\n\n```\n##### \n**NOTE:**\n If you don\u0027t have application class, add new class to your project and inherit Application class. \nYou have to add attribute `[Application()] `and remove application initialization from file \nProperties/ApplicationInfo.cs:  \n\n```\n[assembly: Application (Label = \"Demo app\", Icon = \"@drawable/icon\")]\n```\n##### \n\n### iOS integration\n\n##### \n\n1.Edit info.plst of your project and paste project ID with \"ubertesters_project_id\" key\n\n2.Open \"AppDelegate.cs\" file. Add \"UbertestersSDK\" and “UbertestersCrashHandler” namespaces:\n```\nusing UbertestersSDK;\nusing UbertestersCrashHandler;\n\n```\n3.Override UIApplication Delegate\u0027s method \"FinishedLaunching\" (if it isn\u0027t already exist).\n\n4.Copy following code to the FinishedLaunching body next lines:\n\n```\n     Ubertesters.Shared.Initialize ();\n     AppDomain.CurrentDomain.UnhandledException += \n\t(object sender, UnhandledExceptionEventArgs e) =\u003e {\n\t\t\t\n\t\t\tCrashHandler.PostCrash (e);\n\t   };\n\t\t\treturn true;\n     }\n```","Hash":"90884de07e7ead1ea21b37fd4cb81c08","TargetPlatforms":["ios","android"],"TrialHash":null}